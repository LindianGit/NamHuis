CREATE TABLE [dbo].[AllTable](
	[Run] [int] NULL,
	[num] [int] NULL,
	[occurrence] [int] NULL,
	[lt] [int] NULL
) ON [PRIMARY]

CREATE TABLE [dbo].[stageOne_1](
	[num1] [int] NULL,
	[couldhappen] [decimal](10, 5) NULL
) ON [PRIMARY]


USE LOTTERY2
go
/****************************************************************
  select * from [dbo].[euroJackPotArchive]
  order by id desc 
 *****************************************************************/

declare @maxid int
select @maxid =   max(id) from  euroJackPotArchive   
drop table probability
select  num1 num, count(*) occurrence into probability from  euroJackPotArchive   
group by num1 order by occurrence desc 


TRUNCATE TABLE  new_probabilityResult  
INSERT INTO new_probabilityResult 
            (num, 
             occurrence,
             probability  
              ) 
SELECT num, occurrence, 
occurrence * cast (1.0/(SELECT SUM(occurrence) FROM probability) as decimal(10,10))  AS Probability
FROM probability
ORDER BY occurrence DESC


drop table #lag
;WITH CTE
AS
(   
    SELECT RANK() OVER(PARTITION BY num1 ORDER BY (@maxid  - id) ASC) AS RowNbr,
                                    num1, @maxid  -id + 1  as lt 
    FROM euroJackPotArchive    AS tbl  
)
SELECT  * into #lag from CTE WHERE CTE.RowNbr=1; 

TRUNCATE TABLE stageone_1;
INSERT INTO stageone_1
SELECT p.num,
       p.probability * l.lt couldhappen
FROM   new_probabilityresult p
       INNER JOIN #lag l
               ON p.num = l.num1
ORDER  BY couldhappen DESC;

SELECT p.num AS num1
, p.occurrence, p.probability, l.lt, (p.probability * l.lt) couldHappen,
    NTILE(4) OVER (ORDER BY (p.probability * l.lt) DESC) AS NTileGroup -- Split into 4 NTILES
	,@maxid +1 AS ID
FROM  new_probabilityResult p
INNER JOIN #lag l 
ON p.num = l.num1  
WHERE l.lt < 171 and p.occurrence > 9 
ORDER BY couldHappen DESC;


/************** Probability History ***************************************/  
 
IF OBJECT_ID('dbo.ProbabilityResults', 'U') IS NULL
BEGIN
    CREATE TABLE [dbo].[ProbabilityResults] (
        stem CHAR(4) NOT NULL, -- Holds the constant value 'NUM5'
        num INT NOT NULL, -- Holds the p.num value
        occurrence INT NOT NULL, -- Holds the p.occurrence value
        probability DECIMAL(10, 10) NOT NULL, -- Holds the p.probability value
        lt INT NOT NULL, -- Holds the l.lt value
        couldHappen DECIMAL(18, 10) NOT NULL, -- Holds the calculated (p.probability * l.lt) value
        NTileGroup INT NOT NULL, -- Holds the NTILE(4) group value
        ID INT NOT NULL -- Holds the @maxid + 1 value
    );
END;

-- Insert the query results into the ProbabilityResults table
INSERT INTO [dbo].[ProbHistory] (stem, num, occurrence, probability, lt, couldHappen, NTileGroup, ID)
SELECT 
   'NUM1' AS stem, 
    p.num AS num, 
    p.occurrence, 
    p.probability, 
    l.lt, 
    (p.probability * l.lt) AS couldHappen,
    NTILE(4) OVER (ORDER BY (p.probability * l.lt) DESC) AS NTileGroup, -- Split into 4 NTILES
    @maxid + 1 AS ID
FROM 
    new_probabilityResult p
INNER JOIN 
    #lag l 


USE LOTTERY2 
go
/****************************************************************
Use this to work num2 and num 5 

 select * from [dbo].[euroJackPotArchive]  
 order by id desc 
 
*****************************************************************/

declare @maxid int
select @maxid =   max(id) from  euroJackPotArchive   
drop table probability
select  num2 num, count(*) occurrence into probability from  euroJackPotArchive   
group by num2 order by occurrence desc 


TRUNCATE TABLE  new_probabilityResult  
INSERT INTO new_probabilityResult 
            (num, 
             occurrence,
             probability  
              ) 
SELECT num, occurrence, 
occurrence * cast (1.0/(SELECT SUM(occurrence) FROM probability) as decimal(10,10))  AS Probability
FROM probability
ORDER BY occurrence DESC

drop table #lag
;WITH CTE
AS
(   
    SELECT RANK() OVER(PARTITION BY num2 ORDER BY (@maxid  - id) ASC) AS RowNbr,
                                    num2, @maxid  -id + 1  as lt 
    FROM euroJackPotArchive    AS tbl  
)
SELECT  * into #lag from CTE WHERE CTE.RowNbr=1

--TRUNCATE TABLE stageone_2;
--INSERT INTO stageone_2
--SELECT p.num,
--       p.probability * l.lt couldhappen
--FROM   new_probabilityresult p
--       INNER JOIN #lag l
--               ON p.num = l.num2
--ORDER  BY couldhappen DESC;

SELECT p.num as num2, p.occurrence, p.probability, l.lt, (p.probability * l.lt) couldHappen 
,NTILE(4) OVER (ORDER BY (p.probability * l.lt) DESC) AS NTileGroup -- Split into 4 NTILES
,@maxid +1 AS ID
 FROM  new_probabilityResult p
 inner join #lag l   
 on p.num = l.num2   
  where l.lt < 171  and p.occurrence > 9 
order by couldHappen desc 


/************** Probability History ***************************************/  
 
IF OBJECT_ID('dbo.ProbabilityResults', 'U') IS NULL
BEGIN
    CREATE TABLE [dbo].[ProbabilityResults] (
        stem CHAR(4) NOT NULL, -- Holds the constant value 'NUM5'
        num INT NOT NULL, -- Holds the p.num value
        occurrence INT NOT NULL, -- Holds the p.occurrence value
        probability DECIMAL(10, 10) NOT NULL, -- Holds the p.probability value
        lt INT NOT NULL, -- Holds the l.lt value
        couldHappen DECIMAL(18, 10) NOT NULL, -- Holds the calculated (p.probability * l.lt) value
        NTileGroup INT NOT NULL, -- Holds the NTILE(4) group value
        ID INT NOT NULL -- Holds the @maxid + 1 value
    );
END;

-- Insert the query results into the ProbabilityResults table
INSERT INTO [dbo].[ProbHistory] (stem, num, occurrence, probability, lt, couldHappen, NTileGroup, ID)
SELECT 
   'NUM2' AS stem, 
    p.num AS num, 
    p.occurrence, 
    p.probability, 
    l.lt, 
    (p.probability * l.lt) AS couldHappen,
    NTILE(4) OVER (ORDER BY (p.probability * l.lt) DESC) AS NTileGroup, -- Split into 4 NTILES
    @maxid + 1 AS ID
FROM 
    new_probabilityResult p
INNER JOIN 
    #lag l 
ON 
    p.num = l.num2
WHERE 
    l.lt < 171 
    AND p.occurrence > 9
ORDER BY 
    couldHappen DESC;

ON 
    p.num = l.num1
WHERE 
    l.lt < 171 
    AND p.occurrence > 9
ORDER BY 
    couldHappen DESC;



--*************************** New Code ********************************
Truncate Table [dbo].[AllTable];
IF OBJECT_ID('tempdb..#lag') IS NOT NULL
BEGIN 
INSERT INTO [dbo].[AllTable] (Run, num, occurrence,  lt )
SELECT 
    1 AS Run, 
    p.num, 
    p.occurrence,     
    l.lt    
FROM  
    new_probabilityResult p
INNER JOIN 
    #lag l 
ON 
    p.num = l.num1  
--WHERE 
   -- l.lt < 171 
  --  AND p.occurrence > 9 
ORDER BY 
    num DESC;
END;

 


CREATE TABLE [dbo].[stageOne_2](
	[num2] [int] NULL,
	[couldhappen] [decimal](10, 5) NULL
) ON [PRIMARY]

CREATE TABLE [dbo].[stageOne_3](
	[num2] [int] NULL,
	[couldhappen] [decimal](10, 5) NULL
) ON [PRIMARY]

CREATE TABLE [dbo].[stageOne_4](
	[num2] [int] NULL,
	[couldhappen] [decimal](10, 5) NULL
) ON [PRIMARY]

CREATE TABLE [dbo].[stageOne_5](
	[num2] [int] NULL,
	[couldhappen] [decimal](10, 5) NULL
) ON [PRIMARY]


CREATE TABLE [dbo].[probability](
	[num] [int] NULL,
	[occurrence] [int] NULL
) ON [PRIMARY]

GO
